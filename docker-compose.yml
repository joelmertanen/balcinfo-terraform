# To verify variable substitution from environment:
# $ docker-compose config
# If there's a .env file in the same directory, it will be sourced automatically

version: "3.5"

services:
  influxdb:
    image: influxdb:1.7.2
    restart: always
    expose:
      - "8086"
    environment:
      LETSENCRYPT_EMAIL: "${LETSENCRYPT_EMAIL}"
      LETSENCRYPT_HOST: "${METRICS_INFLUXDB_DOMAIN}"
      VIRTUAL_HOST: "${METRICS_INFLUXDB_DOMAIN}"
      VIRTUAL_PORT: "8086"
      INFLUXDB_HTTP_AUTH_ENABLED: "true"
      INFLUXDB_DB: "${METRICS_INFLUXDB_DB}"
      INFLUXDB_ADMIN_USER: "${METRICS_INFLUXDB_ADMIN_USER}"
      INFLUXDB_ADMIN_PASSWORD: "${METRICS_INFLUXDB_ADMIN_PASSWORD}"
      INFLUXDB_READ_USER: "${METRICS_INFLUXDB_READ_USER}"
      INFLUXDB_READ_USER_PASSWORD: "${METRICS_INFLUXDB_READ_PASSWORD}"
      INFLUXDB_WRITE_USER: "${METRICS_INFLUXDB_WRITE_USER}"
      INFLUXDB_WRITE_USER_PASSWORD: "${METRICS_INFLUXDB_WRITE_PASSWORD}"
    volumes:
      - "/data/influxdb:/var/lib/influxdb"
      - "/data/influxdb-backup:/tmp/backup"
    labels:
      - docker-volume-backup.exec-pre-backup=influxd backup -portable /tmp/backup
      - docker-volume-backup.exec-post-backup=rm -rfv /tmp/backup

  grafana:
    image: grafana/grafana:5.4.2
    restart: always
    expose:
      - "3000"
    environment:
      LETSENCRYPT_EMAIL: "${LETSENCRYPT_EMAIL}"
      LETSENCRYPT_HOST: "${METRICS_GRAFANA_DOMAIN}"
      VIRTUAL_HOST: "${METRICS_GRAFANA_DOMAIN}"
      VIRTUAL_PORT: "3000"
      GF_USERS_ALLOW_SIGN_UP: "false"
      GF_SECURITY_ADMIN_USER: "${METRICS_GRAFANA_ADMIN_USER}"
      GF_SECURITY_ADMIN_PASSWORD: "${METRICS_GRAFANA_ADMIN_PASSWORD}"
      GF_INSTALL_PLUGINS: "grafana-clock-panel"
      GF_SMTP_ENABLED: "false"
    volumes:
      - "grafana-data:/var/lib/grafana"

  nginx:
    image: jwilder/nginx-proxy:0.7.0
    restart: always
    ports:
      - "80:80"
      - "443:443"
    environment:
      # https://github.com/jwilder/nginx-proxy#how-ssl-support-works
      HTTPS_METHOD: "nohttp" # don't ever allow talking to the services over plain HTTP
    volumes:
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
      - "/data/nginx-certs:/etc/nginx/certs:ro"
      - "/data/nginx-data:/etc/nginx/vhost.d"
      - "/data/nginx-data:/usr/share/nginx/html"
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy=true"

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion:v1.9.1
    restart: always
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "/data/nginx-certs:/etc/nginx/certs:rw"
      - "/data/nginx-data:/etc/nginx/vhost.d"
      - "/data/nginx-data:/usr/share/nginx/html"
    depends_on:
      - "nginx"

volumes:
  grafana-data:
    driver_opts:
      type: none
      device: /data/grafana
      o: bind